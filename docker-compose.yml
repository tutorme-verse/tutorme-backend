services:
  reverse-proxy:
    image: traefik:v3.2
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.dnschallenge=true"
      - "--certificatesresolvers.myresolver.acme.dnschallenge.provider=cloudflare"
      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=heyanantraj@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    environment:
      CF_DNS_API_TOKEN: ${CF_DNS_API_TOKEN}
    volumes:
      # So that Traefik can listen to the Docker events
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    env_file:
      - ./.env
  tutorme:
    build:
      context: .
      target: ${GO_ENV}
    container_name: tutorme
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tutorme.rule=Host(`api.tutorme.tech`)"
      - "traefik.http.routers.tutorme.entrypoints=websecure"
      - "traefik.http.routers.tutorme.tls.certresolver=myresolver"
      - "traefik.http.services.tutorme.loadbalancer.server.port=3000"
    expose:
      - 3000
    environment:
      TURSO_DATABASE_URL: ${TURSO_DATABASE_URL}
      TURSO_AUTH_TOKEN: ${TURSO_AUTH_TOKEN}
      GO_ENV: ${GO_ENV}
      DOCKER_PORT: ${DOCKER_PORT}
    env_file:
      - ./.env
    volumes:
      - .:/app
